{"version":3,"file":"static/js/home-page.7d361e2b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.scss?709c","components/MoviesList/MoviesList.jsx","pages/HomePage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__Ea3rL\",\"item\":\"MoviesList_item__gLWPR\",\"poster\":\"MoviesList_poster__dWXXT\",\"link\":\"MoviesList_link__vtKKb\",\"voteAverage\":\"MoviesList_voteAverage__YXovH\",\"voteWrapper\":\"MoviesList_voteWrapper__4IuYk\",\"faHeart\":\"MoviesList_faHeart__4C7h6\",\"voteCount\":\"MoviesList_voteCount__fbDFX\",\"title\":\"MoviesList_title__eedQP\"};","import { Link, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { FaHeart } from 'react-icons/fa';\nimport styles from './MoviesList.module.scss';\nimport posterBg from 'utilities/images/poster.jpg';\n\n// Комопнент списка фильмов, принимает фильмы и location\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul className={styles.list}>\n      {movies.map(({ id, title, poster, voteAverage, voteCount }) => {\n        return (\n          <li key={id} className={styles.item}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={styles.link}\n            >\n              <img\n                className={styles.poster}\n                src={\n                  poster\n                    ? `https://image.tmdb.org/t/p/w500/${poster}`\n                    : posterBg\n                }\n                alt={title}\n              />\n              <p className={styles.voteAverage}>{voteAverage.toFixed(1)}</p>\n              <p className={styles.voteWrapper}>\n                <FaHeart className={styles.faHeart} />\n                <span className={styles.voteCount}>{voteCount}</span>\n              </p>\n              <p className={styles.title}>\n                {title ? title : 'Movie without a title'}\n              </p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nMoviesList.prototype = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      title: propTypes.string,\n      poster: propTypes.string,\n      voteAverage: propTypes.number,\n      voteCount: propTypes.number,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\nimport MoviesList from 'components/MoviesList';\nimport { getTrending } from 'services/api';\n\nfunction HomePage() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    getTrending().then(({ results }) => {\n      const moviesArr = [];\n\n      results.map(\n        ({ id, original_title, poster_path, vote_average, vote_count }) => {\n          const movie = {\n            id,\n            title: original_title,\n            poster: poster_path,\n            voteAverage: vote_average,\n            voteCount: vote_count,\n          };\n\n          return moviesArr.push(movie);\n        }\n      );\n\n      setMovies(moviesArr);\n    });\n  }, []);\n\n  return movies && <MoviesList movies={movies} />;\n}\n\nexport default HomePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const key = '57c4f7b58ce81ca7bd804351e71dcbc7';\nconst url = `https://api.themoviedb.org/3`;\n\n// Фетч актёров для фильма\nexport const getMovieCredits = async movieId => {\n  const filter = `/movie/${movieId}/credits?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n// Фетч фильма по id\nexport const getMovieDetails = async movieId => {\n  const filter = `/movie/${movieId}?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n// Фетч отзывов на фильм\nexport const getMovieReviews = async movieId => {\n  const filter = `/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n// Фетч по поиску\nexport const getSearchMovies = async (query, page = 1) => {\n  const filter = `/search/movie?api_key=${key}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n// Фетч трендов\nexport const getTrending = async () => {\n  const filter = `/trending/all/day?api_key=${key}`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n"],"names":["MoviesList","movies","location","useLocation","className","styles","map","id","title","poster","voteAverage","voteCount","to","state","from","src","posterBg","alt","toFixed","prototype","propTypes","isRequired","useState","setMovies","useEffect","getTrending","then","results","moviesArr","movie","original_title","poster_path","vote_average","vote_count","push","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","url","getMovieCredits","movieId","filter","fetch","response","json","data","getMovieDetails","getMovieReviews","getSearchMovies","query","page"],"sourceRoot":""}