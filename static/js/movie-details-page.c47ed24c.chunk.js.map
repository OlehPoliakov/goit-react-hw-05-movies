{"version":3,"file":"static/js/movie-details-page.c47ed24c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.scss?0a3a","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MuvieDetailsWrapper\":\"MovieDetails_MuvieDetailsWrapper__x2qz3\",\"ButtonGoBack\":\"MovieDetails_ButtonGoBack__H80mT\",\"Label\":\"MovieDetails_Label__SFT5e\",\"MainWrapper\":\"MovieDetails_MainWrapper__eRJFk\",\"Poster\":\"MovieDetails_Poster__sACMV\",\"InfoWrapper\":\"MovieDetails_InfoWrapper__r0bLj\",\"TitleWrapper\":\"MovieDetails_TitleWrapper__ASyOM\",\"Title\":\"MovieDetails_Title__PEFsx\",\"ReleaseDate\":\"MovieDetails_ReleaseDate__oeqlo\",\"GenresList\":\"MovieDetails_GenresList__VSPAl\",\"GenresItem\":\"MovieDetails_GenresItem__2hvhY\",\"Description\":\"MovieDetails_Description__b+tXL\",\"VoteWrapper\":\"MovieDetails_VoteWrapper__Q5iRC\",\"VoteAverage\":\"MovieDetails_VoteAverage__kWcjF\",\"VoteCount\":\"MovieDetails_VoteCount__ttx6w\",\"Value\":\"MovieDetails_Value__XRgNx\",\"AdditionalTitle\":\"MovieDetails_AdditionalTitle__mEBvg\",\"NavigationsItem\":\"MovieDetails_NavigationsItem__SkhEH\",\"CustomLink\":\"MovieDetails_CustomLink__QxSBv\",\"active\":\"MovieDetails_active__vYC56\"};","import { useLocation, useNavigate } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport posterBg from 'utilities/images/poster.jpg';\nimport styles from './MovieDetails.module.scss';\n\nimport { FaChevronRight, FaChevronLeft } from 'react-icons/fa';\n\nfunction MovieDetails({ movieInfo }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const subLocation = location.state.from;\n\n  const {\n    title,\n    genres,\n    description,\n    poster,\n    releaseDate,\n    voteAverage,\n    voteCount,\n  } = movieInfo;\n\n  const onGoBack = () => navigate(location?.state?.from ?? '/');\n\n  return (\n    <div className={styles.MuvieDetailsWrapper}>\n      <button className={styles.ButtonGoBack} type=\"button\" onClick={onGoBack}>\n        <FaChevronLeft />\n        <span className={styles.Label}>Go back</span>\n      </button>\n\n      <div className={styles.MainWrapper}>\n        <img\n          className={styles.Poster}\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : posterBg}\n          alt={title}\n        />\n        <div className={styles.InfoWrapper}>\n          <div className={styles.TitleWrapper}>\n            <h2 className={styles.Title}>{title}</h2>\n            <p className={styles.ReleaseDate}>{releaseDate}</p>\n          </div>\n          <ul className={styles.GenresList}>\n            {genres &&\n              genres.map(({ name, id }) => (\n                <li className={styles.GenresItem} key={id}>\n                  {name}\n                </li>\n              ))}\n          </ul>\n          <p className={styles.Description}>{description}</p>\n          <div className={styles.VoteWrapper}>\n            <p className={styles.VoteAverage}>\n              Vote average:\n              <span className={styles.Value}>{voteAverage.toFixed(1)}</span>\n            </p>\n            <p className={styles.VoteCount}>\n              Vote count:\n              <span className={styles.Value}>{voteCount}</span>\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.AdditionalWrapper}>\n        <p className={styles.AdditionalTitle}>Additional Information</p>\n        <ul className={styles.NavigationsList}>\n          <li className={styles.NavigationsItem}>\n            <NavLink\n              className={styles.CustomLink}\n              to=\"cast\"\n              state={{ from: subLocation }}\n            >\n              <FaChevronRight /> Cast\n            </NavLink>\n          </li>\n          <li className={styles.NavigationsItem}>\n            <NavLink\n              className={styles.CustomLink}\n              to=\"reviews\"\n              state={{ from: subLocation }}\n            >\n              <FaChevronRight /> Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nMovieDetails.prototype = {\n  movieInfo: propTypes.shape({\n    title: propTypes.string,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number,\n        name: propTypes.string,\n      })\n    ),\n    description: propTypes.string,\n    poster: propTypes.string,\n    releaseDate: propTypes.string,\n    voteAverage: propTypes.number,\n    voteCount: propTypes.number,\n  }),\n};\n\nexport default MovieDetails;\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Routes, Route } from 'react-router-dom';\nimport MovieDetails from 'components/MovieDetails';\nimport Loader from 'components/Loader';\nimport { getMovieDetails } from 'services/api';\n\nconst Cast = lazy(() =>\n  import('./Cast.js' /* webpackChunkName: \"cast-view\" */)\n);\nconst Reviews = lazy(() =>\n  import('./Reviews.js' /* webpackChunkName: \"review-view\" */)\n);\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(\n      ({\n        original_title,\n        genres,\n        overview,\n        poster_path,\n        release_date,\n        vote_average,\n        vote_count,\n      }) => {\n        const movieInfo = {\n          title: original_title,\n          genres: genres,\n          description: overview,\n          poster: poster_path,\n          releaseDate: release_date,\n          voteAverage: vote_average,\n          voteCount: vote_count,\n        };\n\n        return setMovieInfo(movieInfo);\n      }\n    );\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && <MovieDetails movieInfo={movieInfo} />}\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetailsPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const key = '57c4f7b58ce81ca7bd804351e71dcbc7';\nconst url = `https://api.themoviedb.org/3`;\n\n// Фетч актёров для фильма\nexport const getMovieCredits = async movieId => {\n  const filter = `/movie/${movieId}/credits?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n// Фетч фильма по id\nexport const getMovieDetails = async movieId => {\n  const filter = `/movie/${movieId}?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n// Фетч отзывов на фильм\nexport const getMovieReviews = async movieId => {\n  const filter = `/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n// Фетч по поиску\nexport const getSearchMovies = async (query, page = 1) => {\n  const filter = `/search/movie?api_key=${key}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n// Фетч трендов\nexport const getTrending = async () => {\n  const filter = `/trending/all/day?api_key=${key}`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n};\n"],"names":["MovieDetails","movieInfo","location","useLocation","navigate","useNavigate","subLocation","state","from","title","genres","description","poster","releaseDate","voteAverage","voteCount","className","styles","type","onClick","src","posterBg","alt","map","name","id","toFixed","to","prototype","propTypes","Cast","lazy","Reviews","movieId","useParams","useState","setMovieInfo","useEffect","getMovieDetails","then","original_title","overview","poster_path","release_date","vote_average","vote_count","Suspense","fallback","Loader","path","element","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","url","getMovieCredits","filter","fetch","response","json","data","getMovieReviews","getSearchMovies","query","page","getTrending"],"sourceRoot":""}